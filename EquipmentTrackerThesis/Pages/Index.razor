@page "/" 
@using EquipmentTrackerThesis.Data;
@using EquipmentTrackerThesis.Database;
@using EquipmentTrackerThesis.Database.Models;
@using EquipmentTrackerThesis.Pages.Components;
@inject DatabaseHandler _databaseHandler;


<PageTitle>Személyes adatok</PageTitle>

<h1>Szia @(firstName)!</h1>

<div class="d-flex flex-row justify-content-around">

    <div class="d-flex flex-culomn">
        <!--Kell majd 1-1 basic kép ide-->
        <img src=@(location) style="width: 120px"/>
        <br />
        Név: @(name)
        <br />
        Beosztás: @(position)
        <br />
        E-mail cím: @(email)
        <br />
        Telefon: @(phone)
    </div>

    <div class="d-flex flex-culomn">

        Felettes: @(boss)
        <br />
        Munkaköri leírás
        <br />
        @(description)
        
    </div>

</div>
<div>
    <button class="btn btn-primary" style="white-space:nowrap" @onclick="@(()=>Modify(employee))">Szerkesztés</button>
</div>

<ModalDialogWindow @ref="modalDialogWindow"></ModalDialogWindow>

@code{
    string location, firstName, surName, name, position, email, phone, boss, boss1, boss2, description;
    bool gender;
    int z = 0; // az adott felhasználó száma
    int supervisor, pos;

    List<Employee> employees = new List<Employee>();
    List<JobTitle> jobTitle = new List<JobTitle>();
    Employee employee = new Employee();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        employees = _databaseHandler.GetAllEmployees();
        jobTitle = _databaseHandler.GetAllJobTitles();
        var x = employees[z];
        employee = x;

        if (x.Gender)
        {
            location = "/css/male.png";
        }
        else
        {
            location = "/css/female.png";
        }

        name = x.SurName + " " + x.FirstName;
        position = jobTitle[x.JobTitle - 5001].Description;
        pos = x.JobTitle - 5001;
        email = x.Email;
        phone = x.Phone;
        boss1 = employees[x.Supervisor - 1].SurName;
        boss2 = employees[x.Supervisor - 1].FirstName;
        description = jobTitle[x.JobTitle - 5001].Responsibilities;
        firstName = x.FirstName;
        surName = x.SurName;
        gender = x.Gender;
        boss = boss1 + " " + boss2; 
        if (boss == name)
        {
            boss = " - ";
        }
        supervisor = x.Supervisor;
    }

    private ModalDialogWindow modalDialogWindow { get; set; }

    private void Modify(Employee employee)
    {
        modalDialogWindow.Title = $"Szerkesztés";
        modalDialogWindow.FirstName = firstName;
        modalDialogWindow.SurName = surName;
        modalDialogWindow.Email = email;
        modalDialogWindow.JobTitle = pos;
        modalDialogWindow.Phone = phone;
        modalDialogWindow.Supervisor = supervisor;
        modalDialogWindow.Gender = gender;
        modalDialogWindow.Type = ModalWindowType.Modify;
        modalDialogWindow.EmployeeId = z;
        modalDialogWindow.Open(employee);



    }



        //TODO: hibára áll ki, ha bármelyik sorban NULL érték van, kezelni kell!
        //TODO: kezeni az idegen kulcsok mitti törlés tiltását hozzá tartozó hibaüzenettel

            /*AccessCard x = new AccessCard();
            x.MainBuilding = true;
            x.Laboratory = false;
            x.ProductionSite = true;
            x.ProductionSite = false;
            x.HazardWarehouse = true;
            x.DevelopementCenter = false;
            x.CountrysideSite = false;

            _databaseHandler.AddNewAccessCard(x); 
            var accessCards = _databaseHandler.GetAllAccessCards();
            bool z = accessCards[1].Laboratory;
            _databaseHandler.DeleteAccessCard(accessCards[7]);*/

            /*Devices x = new Devices();
            x.SerialNumber = "51654132516sdf";
            x.Type = "Tablet";
            x.PurchaseDate = new DateTime(2024, 2, 28);

            _databaseHandler.AddNewDevice(x);
            var devices = _databaseHandler.GetAllDevices();
            string z = devices[1].Type;
            _databaseHandler.DeleteDevice(devices[5]);*/

            /*Employee x = new Employee();
            x.SurName = "Próba";
            x.FirstName = "Mihály";
            x.Email = "proba@proba.hu";
            x.JobTitle = 5004;
            x.Supervisor = 3;

            _databaseHandler.AddNewEmployee(x);
            var employee = _databaseHandler.GetAllEmployees();
            string z = employee[1].FirstName;
            _databaseHandler.DeleteEmployee(employee[3]);*/

            /*JobTitle x = new JobTitle();
            x.Description = "Sofőr";
            x.AccessCardType = 1004;

            _databaseHandler.AddNewJobTitle(x);
            var jobTitle = _databaseHandler.GetAllJobTitles();
            string z = jobTitle[1].Description;
            _databaseHandler.DeleteJobTitle(jobTitle[3]);*/

        
    
}